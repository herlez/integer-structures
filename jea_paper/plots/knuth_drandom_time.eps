%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../plots/knuth_drandom_time.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Feb 23 15:46:15 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
900 600 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1020 1020 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
1020 1440 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
1020 1860 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
1020 2280 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
1020 2700 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1020 3120 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 1.2) Rshow
grestore
1.000 UL
LTb
1020 3540 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 1.4) Rshow
grestore
1.000 UL
LTb
1020 3960 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 1.6) Rshow
grestore
1.000 UL
LTb
1020 4380 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 1.8) Rshow
grestore
1.000 UL
LTb
1020 4800 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 2) Rshow
grestore
1.000 UL
LTb
6213 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(27) Cshow
grestore
1.000 UL
LTb
5824 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(26) Cshow
grestore
1.000 UL
LTb
5434 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(25) Cshow
grestore
1.000 UL
LTb
5045 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(24) Cshow
grestore
1.000 UL
LTb
4655 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(23) Cshow
grestore
1.000 UL
LTb
4265 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(22) Cshow
grestore
1.000 UL
LTb
3876 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(21) Cshow
grestore
1.000 UL
LTb
3486 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(20) Cshow
grestore
1.000 UL
LTb
3097 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(19) Cshow
grestore
1.000 UL
LTb
2707 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(18) Cshow
grestore
1.000 UL
LTb
2318 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(17) Cshow
grestore
1.000 UL
LTb
1928 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(16) Cshow
grestore
1.000 UL
LTb
1539 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(15) Cshow
grestore
1.000 UL
LTb
1149 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(14) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Microseconds per operation) Cshow
grestore
grestore
LTb
3940 100 M
gsave 0 setgray
(Log2\(Number of keys\)) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
1140 4637 M
gsave 0 setgray
(Red-black tree) Lshow
grestore
LT0
2940 4637 M
543 0 V
1149 1250 M
390 37 V
389 57 V
390 73 V
389 186 V
390 284 V
389 417 V
390 317 V
389 463 V
390 274 V
390 473 V
389 317 V
390 606 V
1149 1250 Pls
1539 1287 Pls
1928 1344 Pls
2318 1417 Pls
2707 1603 Pls
3097 1887 Pls
3486 2304 Pls
3876 2621 Pls
4265 3084 Pls
4655 3358 Pls
5045 3831 Pls
5434 4148 Pls
5824 4754 Pls
3211 4637 Pls
1.000 UP
1.000 UL
LT1
LTb
1140 4437 M
gsave 0 setgray
(B-tree) Lshow
grestore
LT1
2940 4437 M
543 0 V
1149 1184 M
390 27 V
389 30 V
390 40 V
389 63 V
390 139 V
389 165 V
390 165 V
389 156 V
390 170 V
390 187 V
389 208 V
390 216 V
389 249 V
1149 1184 Crs
1539 1211 Crs
1928 1241 Crs
2318 1281 Crs
2707 1344 Crs
3097 1483 Crs
3486 1648 Crs
3876 1813 Crs
4265 1969 Crs
4655 2139 Crs
5045 2326 Crs
5434 2534 Crs
5824 2750 Crs
6213 2999 Crs
3211 4437 Crs
1.000 UP
1.000 UL
LT2
LTb
1140 4237 M
gsave 0 setgray
(S-tree) Lshow
grestore
LT2
2940 4237 M
543 0 V
1149 898 M
390 8 V
389 64 V
390 138 V
389 233 V
390 234 V
389 182 V
390 98 V
1149 898 Star
1539 906 Star
1928 970 Star
2318 1108 Star
2707 1341 Star
3097 1575 Star
3486 1757 Star
3876 1855 Star
3211 4237 Star
1.000 UP
1.000 UL
LT3
LTb
1140 4037 M
gsave 0 setgray
(LPCQ-trie) Lshow
grestore
LT3
2940 4037 M
543 0 V
1149 1012 M
390 14 V
389 15 V
390 36 V
389 30 V
390 73 V
389 149 V
390 270 V
389 203 V
390 129 V
390 139 V
389 288 V
390 190 V
389 108 V
1149 1012 Box
1539 1026 Box
1928 1041 Box
2318 1077 Box
2707 1107 Box
3097 1180 Box
3486 1329 Box
3876 1599 Box
4265 1802 Box
4655 1931 Box
5045 2070 Box
5434 2358 Box
5824 2548 Box
6213 2656 Box
3211 4037 Box
1.000 UP
1.000 UL
LT4
LTb
1140 3837 M
gsave 0 setgray
(LPCB-trie) Lshow
grestore
LT4
2940 3837 M
543 0 V
1149 953 M
390 -26 V
389 21 V
390 103 V
389 -32 V
390 65 V
389 167 V
390 246 V
389 57 V
390 92 V
390 149 V
389 189 V
390 -16 V
389 85 V
1149 953 BoxF
1539 927 BoxF
1928 948 BoxF
2318 1051 BoxF
2707 1019 BoxF
3097 1084 BoxF
3486 1251 BoxF
3876 1497 BoxF
4265 1554 BoxF
4655 1646 BoxF
5045 1795 BoxF
5434 1984 BoxF
5824 1968 BoxF
6213 2053 BoxF
3211 3837 BoxF
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
