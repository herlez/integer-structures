%!PS-Adobe-2.0 EPSF-2.0
%%Title: ../plots/burst_irandom_time_knuth.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Feb 23 15:46:15 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
900 600 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1020 1125 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.1) Rshow
grestore
1.000 UL
LTb
1020 1650 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
1020 2175 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.3) Rshow
grestore
1.000 UL
LTb
1020 2700 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
1020 3225 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.5) Rshow
grestore
1.000 UL
LTb
1020 3750 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
1020 4275 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.7) Rshow
grestore
1.000 UL
LTb
1020 4800 M
63 0 V
5777 0 R
-63 0 V
-5897 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
6213 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(27) Cshow
grestore
1.000 UL
LTb
5824 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(26) Cshow
grestore
1.000 UL
LTb
5434 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(25) Cshow
grestore
1.000 UL
LTb
5045 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(24) Cshow
grestore
1.000 UL
LTb
4655 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(23) Cshow
grestore
1.000 UL
LTb
4265 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(22) Cshow
grestore
1.000 UL
LTb
3876 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(21) Cshow
grestore
1.000 UL
LTb
3486 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(20) Cshow
grestore
1.000 UL
LTb
3097 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(19) Cshow
grestore
1.000 UL
LTb
2707 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(18) Cshow
grestore
1.000 UL
LTb
2318 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(17) Cshow
grestore
1.000 UL
LTb
1928 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(16) Cshow
grestore
1.000 UL
LTb
1539 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(15) Cshow
grestore
1.000 UL
LTb
1149 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
gsave 0 setgray
(14) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
LTb
200 2700 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Microseconds per locate) Cshow
grestore
grestore
LTb
3940 100 M
gsave 0 setgray
(Log2\(Number of keys\)) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
1140 4637 M
gsave 0 setgray
(TB-trie) Lshow
grestore
LT0
2340 4637 M
543 0 V
1149 1171 M
390 -75 V
389 149 V
390 668 V
389 149 V
390 216 V
389 120 V
390 112 V
389 179 V
390 257 V
390 334 V
389 739 V
390 646 V
1149 1171 Pls
1539 1096 Pls
1928 1245 Pls
2318 1913 Pls
2707 2062 Pls
3097 2278 Pls
3486 2398 Pls
3876 2510 Pls
4265 2689 Pls
4655 2946 Pls
5045 3280 Pls
5434 4019 Pls
5824 4665 Pls
2611 4637 Pls
1.000 UP
1.000 UL
LT1
LTb
1140 4437 M
gsave 0 setgray
(WB-trie) Lshow
grestore
LT1
2340 4437 M
543 0 V
1149 808 M
390 128 V
389 277 V
390 339 V
389 362 V
390 231 V
389 137 V
390 119 V
389 181 V
390 398 V
390 637 V
389 385 V
390 235 V
389 110 V
1149 808 Crs
1539 936 Crs
1928 1213 Crs
2318 1552 Crs
2707 1914 Crs
3097 2145 Crs
3486 2282 Crs
3876 2401 Crs
4265 2582 Crs
4655 2980 Crs
5045 3617 Crs
5434 4002 Crs
5824 4237 Crs
6213 4347 Crs
2611 4437 Crs
1.000 UP
1.000 UL
LT2
LTb
1140 4237 M
gsave 0 setgray
(PCB-trie) Lshow
grestore
LT2
2340 4237 M
543 0 V
1149 1051 M
390 35 V
389 197 V
390 395 V
389 389 V
390 211 V
389 115 V
390 106 V
389 178 V
390 287 V
390 353 V
389 736 V
390 644 V
389 -238 V
1149 1051 Star
1539 1086 Star
1928 1283 Star
2318 1678 Star
2707 2067 Star
3097 2278 Star
3486 2393 Star
3876 2499 Star
4265 2677 Star
4655 2964 Star
5045 3317 Star
5434 4053 Star
5824 4697 Star
6213 4459 Star
2611 4237 Star
1.000 UP
1.000 UL
LT3
LTb
1140 4037 M
gsave 0 setgray
(LCB-trie) Lshow
grestore
LT3
2340 4037 M
543 0 V
1149 1091 M
390 13 V
1928 980 L
390 98 V
389 291 V
390 654 V
389 166 V
390 152 V
389 186 V
390 491 V
390 -185 V
389 267 V
390 265 V
389 663 V
1149 1091 Box
1539 1104 Box
1928 980 Box
2318 1078 Box
2707 1369 Box
3097 2023 Box
3486 2189 Box
3876 2341 Box
4265 2527 Box
4655 3018 Box
5045 2833 Box
5434 3100 Box
5824 3365 Box
6213 4028 Box
2611 4037 Box
1.000 UP
1.000 UL
LT4
LTb
1140 3837 M
gsave 0 setgray
(LPCB-trie) Lshow
grestore
LT4
2340 3837 M
543 0 V
1149 1033 M
390 73 V
1928 978 L
390 114 V
389 285 V
390 593 V
389 187 V
390 172 V
389 185 V
390 503 V
390 -211 V
389 246 V
390 267 V
389 635 V
1149 1033 BoxF
1539 1106 BoxF
1928 978 BoxF
2318 1092 BoxF
2707 1377 BoxF
3097 1970 BoxF
3486 2157 BoxF
3876 2329 BoxF
4265 2514 BoxF
4655 3017 BoxF
5045 2806 BoxF
5434 3052 BoxF
5824 3319 BoxF
6213 3954 BoxF
2611 3837 BoxF
1.000 UL
LTb
1020 600 M
5840 0 V
0 4200 V
-5840 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
